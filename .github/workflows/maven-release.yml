name: Build and Release

on:
  release:
    types: [created]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build and Deploy from ubuntu-latest
      run: mvn -B deploy --file pom.xml -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build and Deplo from windows-latest
      run: mvn -B deploy --file pom.xml -s %GITHUB_WORKSPACE%/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}


  release:
    needs:
      - build-linux
      - build-windows
    runs-on: ubuntu-latest

    steps:

    - name: Get artifact version
      shell: bash
      run: |
        echo "artifact_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Set up Git
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
      
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          metricshub-linux-jre/target/*
          metricshub-windows-jre/target/*
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Release Linux Asset
      id: upload-release-linux-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./metricshub-jre-linux/target/metricshub-jre-linux-${{ env.artifact_version }}.zip
        asset_name: metricshub-jre-linux-${{ env.artifact_version }}.zip
        asset_content_type: application/zip

    - name: Upload Release Windows Asset
      id: upload-release-windows-asset 
      uses: actions/upload-release-asset@v1
      if: matrix.os == 'windows-latest'
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./metricshub-jre-windows/target/metricshub-jre-windows-${{ env.artifact_version }}.zip
        asset_name: metricshub-jre-windows-${{ env.artifact_version }}.zip
        asset_content_type: application/zip
